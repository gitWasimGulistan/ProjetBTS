<?php	class panier extends BDD{			private $DB;		private $remiseCinq = 5;		private $remiseDix = 10;				/**		 * Initialise le panier		 *		 * Crée une variable de type session dans le cas où elle n'existe pas 		 * Recupere la connexion a la base de donnee pour pouvoir effectuer des taches avec la base de donnee		*/		public function __construct(){			if(!isset($_SESSION['produit'])){				$_SESSION['produit'] = array();			}			$this->DB = BDD::getPdoInstance();		}				/**		 * Ajoute dans le panier		 *		 * Ajoute la variable de type session correspondant a un produit		 */		public function add($prod_id){			if(isset($_SESSION['produit'][$prod_id])){				if($_SESSION['produit'][$prod_id] > 9){					$_SESSION['produit'][$prod_id] = 10;				}else{					$_SESSION['produit'][$prod_id]++;				}			}else{				$_SESSION['produit'][$prod_id] = 1;			}		}				/**		 * Supprimer dans le panier		 *		 * Supprime la variable de type session correspondant a un produit		 */		public function del($prod_id){			if(isset($_SESSION['produit'][$prod_id])){				if($_SESSION['produit'][$prod_id] >= 2){					$_SESSION['produit'][$prod_id]--;				}else{					unset($_SESSION['produit'][$prod_id]);				}			}else{				unset($_SESSION['produit'][$prod_id]);			}		}		/**		 * Affiche le total de tout les produits qui se trouvent dans le panier		 */		public function prodTotalPrixTTC($prod_id){			$total = 0;			$ids = $_SESSION['produit'];			if(empty($ids)){				$produit = array();			}else{				try {					$produit = $this->DB->query("SELECT id, prix FROM produit WHERE id=:id", array("id" => $prod_id), PDO::FETCH_OBJ);				}catch(Exception $e){					echo 'Erreur SQL : '.$e->getMessage().'<br />'.$sql;'<br />';				}			}			foreach($produit as $prod){				$total += $prod->prix * 1.196 * $_SESSION['produit'][$prod->id];			}			return $total;		}		/**		 * Affiche le total de tout les produits qui se trouvent dans le panier		 */		public function totalPrixTTC(){			$total = 0;			$ids = array_keys($_SESSION['produit']);			if(empty($ids)){				$produit = array();			}else{				$implode = implode("','", $ids);				try {					$produit = $this->DB->query("SELECT id, prix FROM produit WHERE id IN ('$implode')", null, PDO::FETCH_OBJ);				}catch(Exception $e){					echo 'Erreur SQL : '.$e->getMessage().'<br />'.$sql;'<br />';				}			}			foreach($produit as $prod){				$total += $prod->prix * 1.196 * $_SESSION['produit'][$prod->id];			}			return $total;		}				/*		* Teste si un client est ancien ou si il a une commande a plus de 200€ ou 		*/		public function existeRemise($client, $prix){			$chiffreAffaire = $this->DB->query("SELECT chiffreAffaire FROM client WHERE id=:idClient", array('idClient' => $client), PDO::FETCH_OBJ);			$chiffreAffaire = array_shift($chiffreAffaire);			if($chiffreAffaire->chiffreAffaire >= 200 || $prix >= 200){				$ok = true;			}else{				$ok = false;			}						return $ok;		}				public function totalAvecRemise($prix, $client){			if($this->existeRemise($client, $prix) || $prix >= 200){				if(($prix >= 200) && ($prix < 400)){					$totalRemise = $prix * (1-($this->remiseCinq/100));				}				if($prix >= 400){					$totalRemise =  $prix * (1-($this->remiseDix/100));				}				return $totalRemise;			}		}				public function montantTVA($prix){			return $prix * 0.196;		}				/**		 * Affiche le total de tout les produits qui se trouvent dans le panier		 */		public function prodTotalPrix(){			$total = 0;			$ids = array_keys($_SESSION['produit']);			if(empty($ids)){				$produit = array();			}else{				$implode = implode("','", $ids);				try {					$produit = $this->DB->query("SELECT id, prix FROM produit WHERE id IN ('$implode')", null, PDO::FETCH_OBJ);				}catch(Exception $e){					echo 'Erreur SQL : '.$e->getMessage().'<br />'.$sql;'<br />';				}			}			foreach($produit as $prod){				$total += $prod->prix * $_SESSION['produit'][$prod->id];			}			return $total;		}	}?>